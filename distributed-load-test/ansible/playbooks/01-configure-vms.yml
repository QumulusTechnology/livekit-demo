---
- name: Configure VMs for Load Testing
  hosts: load_test_vms
  become: yes
  gather_facts: yes
  
  tasks:
    - name: Wait for cloud-init to complete
      wait_for:
        path: /home/ubuntu/init-complete.flag
        timeout: 300
      
    - name: Verify system optimizations
      command: sysctl {{ item }}
      register: sysctl_values
      with_items:
        - net.core.rmem_max
        - net.core.wmem_max
        - fs.file-max
      changed_when: false
      
    - name: Display system optimizations
      debug:
        msg: "{{ item.cmd }}: {{ item.stdout }}"
      with_items: "{{ sysctl_values.results }}"
      
    - name: Install additional performance monitoring tools
      apt:
        name:
          - dstat
          - iftop
          - nethogs
          - bmon
        state: present
        update_cache: yes
      
    - name: Verify LiveKit CLI installation
      command: which lk
      register: lk_path
      changed_when: false
      failed_when: lk_path.rc != 0
      
    - name: Get LiveKit CLI version
      command: lk --version
      register: lk_version
      changed_when: false
      
    - name: Display LiveKit CLI info
      debug:
        msg: "LiveKit CLI installed at {{ lk_path.stdout }}, version: {{ lk_version.stdout }}"
      
    - name: Create load test directories
      file:
        path: "/home/ubuntu/load-test/{{ item }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      with_items:
        - scripts
        - configs
        - logs
        - results
        - metrics
      
    - name: Install Python packages for monitoring
      apt:
        name:
          - python3-psutil
          - python3-pandas
          - python3-matplotlib
          - python3-jinja2
        state: present
        update_cache: yes
      
    - name: Copy monitoring script
      copy:
        content: |
          #!/usr/bin/env python3
          import psutil
          import json
          import time
          import sys
          
          def collect_metrics():
              return {
                  'timestamp': time.time(),
                  'cpu_percent': psutil.cpu_percent(interval=1),
                  'memory': psutil.virtual_memory()._asdict(),
                  'network': {iface: stats._asdict() for iface, stats in psutil.net_io_counters(pernic=True).items()},
                  'connections': len(psutil.net_connections())
              }
          
          if __name__ == '__main__':
              output_file = sys.argv[1] if len(sys.argv) > 1 else '/home/ubuntu/load-test/metrics/system-metrics.jsonl'
              with open(output_file, 'a') as f:
                  while True:
                      metrics = collect_metrics()
                      f.write(json.dumps(metrics) + '\n')
                      f.flush()
                      time.sleep(10)
        dest: /home/ubuntu/load-test/scripts/monitor.py
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      
    - name: Set up performance tuning service
      copy:
        content: |
          [Unit]
          Description=Load Test Performance Tuning
          After=network.target
          
          [Service]
          Type=oneshot
          ExecStart=/bin/bash -c 'echo 3 > /proc/sys/vm/drop_caches'
          ExecStart=/bin/bash -c 'echo 1 > /proc/sys/vm/compact_memory'
          RemainAfterExit=yes
          
          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/loadtest-tuning.service
      
    - name: Enable and start tuning service
      systemd:
        name: loadtest-tuning
        enabled: yes
        state: started
        daemon_reload: yes