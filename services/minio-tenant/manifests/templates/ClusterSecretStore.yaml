apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-credentials
  annotations:
    argocd.argoproj.io/sync-wave: "0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eso-store-role
  annotations:
    argocd.argoproj.io/sync-wave: "0"
rules:
- apiGroups: [""]
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authorization.k8s.io
  resources:
  - selfsubjectrulesreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-credentials-binding2
  annotations:
    argocd.argoproj.io/sync-wave: "0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eso-store-role
subjects:
- kind: ServiceAccount
  name: external-secrets-credentials
---
apiVersion: external-secrets.io/v1
kind: ClusterSecretStore

metadata:
  name: minio-tenant-secrets-store
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
spec:
  provider:
    kubernetes:
      remoteNamespace: minio-tenant
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
          namespace: minio-tenant
      auth:
        serviceAccount:
          name: external-secrets-credentials
          namespace: minio-tenant
