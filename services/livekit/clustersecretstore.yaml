# ServiceAccount for accessing LiveKit secrets from other namespaces
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: livekit-external-secrets
  namespace: livekit
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
---
# Role to allow reading secrets in livekit namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: livekit-secrets-reader
  namespace: livekit
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
rules:
- apiGroups: [""]
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authorization.k8s.io
  resources:
  - selfsubjectrulesreviews
  verbs:
  - create
---
# RoleBinding for the ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: livekit-external-secrets-binding
  namespace: livekit
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: livekit-secrets-reader
subjects:
- kind: ServiceAccount
  name: livekit-external-secrets
  namespace: livekit
---
# ClusterSecretStore for LiveKit keys file
apiVersion: external-secrets.io/v1
kind: ClusterSecretStore
metadata:
  name: livekit-secrets-store
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  provider:
    kubernetes:
      remoteNamespace: livekit
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
          namespace: livekit
      auth:
        serviceAccount:
          name: livekit-external-secrets
          namespace: livekit