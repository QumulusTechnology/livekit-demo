# Node tuning Job - manually triggered to apply optimizations once and exit
# This is run manually when needed, not continuously
apiVersion: batch/v1
kind: Job
metadata:
  name: livekit-node-tuning-manual
  namespace: livekit
  labels:
    app: livekit-node-tuning
spec:
  parallelism: 10  # Adjust based on your node count
  completions: 10  # All must complete
  template:
    metadata:
      labels:
        app: livekit-node-tuning
    spec:
      restartPolicy: OnFailure
      hostNetwork: true
      hostPID: true
      hostIPC: true
      tolerations:
      - operator: Exists
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: livekit-node-tuning
            topologyKey: kubernetes.io/hostname
      volumes:
      - name: host-sys
        hostPath:
          path: /sys
      - name: host-proc
        hostPath:
          path: /proc
      containers:
      - name: node-tuner
        image: alpine:latest
        command: ["/bin/sh"]
        args:
          - -c
          - |
            set -ex
            
            NODE_NAME=$(hostname)
            echo "Applying LiveKit node optimizations on $NODE_NAME..."
            
            # Apply sysctl settings individually with error handling
            echo "Setting network buffer sizes..."
            sysctl -w net.core.rmem_max=134217728 || echo "Failed to set rmem_max"
            sysctl -w net.core.wmem_max=134217728 || echo "Failed to set wmem_max"
            sysctl -w net.core.rmem_default=16777216 || echo "Failed to set rmem_default"
            sysctl -w net.core.wmem_default=16777216 || echo "Failed to set wmem_default"
            sysctl -w net.core.netdev_max_backlog=10000 || echo "Failed to set netdev_max_backlog"
            sysctl -w net.core.netdev_budget=1000 || echo "Failed to set netdev_budget"
            sysctl -w net.core.netdev_budget_usecs=8000 || echo "Failed to set netdev_budget_usecs"
            
            # UDP optimizations
            echo "Setting UDP parameters..."
            sysctl -w net.ipv4.udp_mem="204800 1747600 33554432" || echo "Failed to set udp_mem"
            sysctl -w net.ipv4.udp_rmem_min=16384 || echo "Failed to set udp_rmem_min"
            sysctl -w net.ipv4.udp_wmem_min=16384 || echo "Failed to set udp_wmem_min"
            
            # TCP optimizations
            echo "Setting TCP parameters..."
            sysctl -w net.ipv4.tcp_rmem="8192 174760 268435456" || echo "Failed to set tcp_rmem"
            sysctl -w net.ipv4.tcp_wmem="8192 131072 268435456" || echo "Failed to set tcp_wmem"
            sysctl -w net.ipv4.tcp_congestion_control=bbr || echo "Failed to set tcp_congestion_control"
            sysctl -w net.core.default_qdisc=fq || echo "Failed to set default_qdisc"
            sysctl -w net.ipv4.tcp_slow_start_after_idle=0 || echo "Failed to set tcp_slow_start_after_idle"
            sysctl -w net.ipv4.tcp_no_metrics_save=1 || echo "Failed to set tcp_no_metrics_save"
            sysctl -w net.ipv4.tcp_fin_timeout=15 || echo "Failed to set tcp_fin_timeout"
            sysctl -w net.ipv4.tcp_keepalive_time=300 || echo "Failed to set tcp_keepalive_time"
            sysctl -w net.ipv4.tcp_keepalive_probes=5 || echo "Failed to set tcp_keepalive_probes"
            sysctl -w net.ipv4.tcp_keepalive_intvl=15 || echo "Failed to set tcp_keepalive_intvl"
            sysctl -w net.ipv4.tcp_max_syn_backlog=8192 || echo "Failed to set tcp_max_syn_backlog"
            sysctl -w net.core.somaxconn=32768 || echo "Failed to set somaxconn"
            
            # File descriptors
            echo "Setting file descriptor limits..."
            sysctl -w fs.file-max=4194304 || echo "Failed to set file-max"
            sysctl -w fs.nr_open=4194304 || echo "Failed to set nr_open"
            
            # Process limits
            echo "Setting process limits..."
            sysctl -w kernel.pid_max=8388608 || echo "Failed to set pid_max"
            sysctl -w kernel.threads-max=8388608 || echo "Failed to set threads-max"
            
            # Memory optimizations
            echo "Setting memory parameters..."
            sysctl -w vm.max_map_count=524288 || echo "Failed to set max_map_count"
            sysctl -w vm.swappiness=0 || echo "Failed to set swappiness"
            sysctl -w vm.dirty_ratio=10 || echo "Failed to set dirty_ratio"
            sysctl -w vm.dirty_background_ratio=3 || echo "Failed to set dirty_background_ratio"
            sysctl -w vm.vfs_cache_pressure=25 || echo "Failed to set vfs_cache_pressure"
            sysctl -w vm.min_free_kbytes=131072 || echo "Failed to set min_free_kbytes"
            sysctl -w vm.zone_reclaim_mode=0 || echo "Failed to set zone_reclaim_mode"
            
            # CPU scheduling (skip unsupported parameters)
            echo "Setting CPU scheduling parameters..."
            sysctl -w kernel.sched_autogroup_enabled=0 || echo "Failed to set sched_autogroup_enabled"
            
            # Connection tracking
            echo "Setting connection tracking parameters..."
            sysctl -w net.netfilter.nf_conntrack_max=1048576 || echo "Failed to set nf_conntrack_max"
            sysctl -w net.netfilter.nf_conntrack_buckets=262144 || echo "Failed to set nf_conntrack_buckets"
            sysctl -w net.netfilter.nf_conntrack_tcp_timeout_established=86400 || echo "Failed to set nf_conntrack_tcp_timeout_established"
            
            # Other optimizations
            echo "Setting other parameters..."
            sysctl -w kernel.numa_balancing=0 || echo "Failed to set numa_balancing"
            sysctl -w kernel.core_pattern=/tmp/core-%e-%p-%t || echo "Failed to set core_pattern"
            sysctl -w kernel.core_uses_pid=1 || echo "Failed to set core_uses_pid"
            
            # CPU governor optimization (if available)
            if [ -d /sys/devices/system/cpu/cpu0/cpufreq ]; then
              echo "Setting CPU governor to performance..."
              for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do
                if [ -f "$cpu" ]; then
                  echo "performance" > "$cpu" 2>/dev/null || true
                fi
              done
            fi
            
            # Disable swap if possible
            echo "Disabling swap..."
            swapoff -a 2>/dev/null || true
            
            # IRQ optimization for network interfaces
            echo "Optimizing IRQ affinity..."
            for irq in $(grep eth /proc/interrupts | cut -d: -f1 | tr -d ' '); do
              if [ -f "/proc/irq/$irq/smp_affinity" ]; then
                echo 2 > "/proc/irq/$irq/smp_affinity" 2>/dev/null || true
              fi
            done
            
            # Network interface optimizations
            echo "Optimizing network interfaces..."
            for iface in $(ls /sys/class/net/ | grep -v lo); do
              [ -f "/sys/class/net/$iface/queues/rx-0/rps_flow_cnt" ] && echo 1000 > "/sys/class/net/$iface/queues/rx-0/rps_flow_cnt" 2>/dev/null || true
              [ -f "/sys/class/net/$iface/queues/rx-0/rps_sock_flow_entries" ] && echo 32768 > "/sys/class/net/$iface/queues/rx-0/rps_sock_flow_entries" 2>/dev/null || true
            done
            
            echo "âœ… LiveKit node optimizations completed successfully on $NODE_NAME"
        securityContext:
          privileged: true
        volumeMounts:
        - name: host-sys
          mountPath: /sys
        - name: host-proc
          mountPath: /proc
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 100m
            memory: 64Mi