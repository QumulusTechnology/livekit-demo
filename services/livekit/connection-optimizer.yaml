apiVersion: v1
kind: ConfigMap
metadata:
  name: livekit-connection-optimizer
  namespace: livekit
data:
  nginx.conf: |
    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
    }
    
    http {
        upstream livekit_backend {
            least_conn;
            keepalive 300;
            keepalive_requests 10000;
            keepalive_timeout 60s;
            
            # Let nginx discover all pod endpoints automatically
            server livekit-livekit-server.livekit.svc.cluster.local:80 max_fails=2 fail_timeout=10s;
        }
        
        server {
            listen 8080;
            
            # Connection optimizations for 1000+ participants
            client_max_body_size 100m;
            client_body_timeout 60s;
            client_header_timeout 60s;
            keepalive_timeout 65s;
            keepalive_requests 10000;
            
            # WebSocket optimizations
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 10s;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            location / {
                proxy_pass http://livekit_backend;
                
                # Connection pooling
                proxy_buffering off;
                proxy_request_buffering off;
                
                # Health checks
                proxy_next_upstream error timeout http_502 http_503 http_504;
                proxy_next_upstream_tries 3;
                proxy_next_upstream_timeout 10s;
            }
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: livekit-connection-optimizer
  namespace: livekit
  labels:
    app: livekit-connection-optimizer
spec:
  replicas: 4
  selector:
    matchLabels:
      app: livekit-connection-optimizer
  template:
    metadata:
      labels:
        app: livekit-connection-optimizer
    spec:
      priorityClassName: livekit-medium-priority
      # nodeSelector:
      #   workload-type: livekit-compute
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: livekit-connection-optimizer
---
apiVersion: v1
kind: Service
metadata:
  name: livekit-connection-optimizer
  namespace: livekit
spec:
  selector:
    app: livekit-connection-optimizer
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
