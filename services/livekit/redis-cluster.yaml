# Redis cluster for LiveKit services (without authentication)
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: livekit
data:
  redis.conf: |
    # Cluster configuration
    cluster-enabled yes
    cluster-require-full-coverage yes
    cluster-node-timeout 15000
    
    # No authentication
    protected-mode no
    
    # Performance optimizations
    tcp-keepalive 60
    tcp-backlog 1024  # Increased for better connection handling
    maxclients 20000  # Doubled for more concurrent connections
    
    # Memory policy
    maxmemory-policy allkeys-lru
    
    # Persistence disabled for performance
    save ""
    appendonly no
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: livekit
spec:
  clusterIP: None
  selector:
    app: redis-cluster
  ports:
  - name: redis
    port: 6379
  - name: cluster
    port: 16379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-svc
  namespace: livekit
spec:
  type: ClusterIP
  selector:
    app: redis-cluster
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: livekit
spec:
  serviceName: redis-cluster
  replicas: 6  # Increased from 3 to 6 for better performance
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command:
        - redis-server
        args:
        - /etc/redis/redis.conf
        ports:
        - containerPort: 6379
          name: redis
        - containerPort: 16379
          name: cluster
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - name: config
          mountPath: /etc/redis
      volumes:
      - name: config
        configMap:
          name: redis-cluster-config
---
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-cluster-init
  namespace: livekit
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: cluster-init
        image: redis:7-alpine
        command:
        - sh
        - -c
        - |
          # Wait for all nodes to be ready
          for i in 0 1 2 3 4 5; do
            until redis-cli -h redis-cluster-$i.redis-cluster ping; do
              echo "Waiting for redis-cluster-$i..."
              sleep 2
            done
          done
          
          # Create cluster
          echo "Creating Redis cluster..."
          redis-cli --cluster create \
            redis-cluster-0.redis-cluster:6379 \
            redis-cluster-1.redis-cluster:6379 \
            redis-cluster-2.redis-cluster:6379 \
            redis-cluster-3.redis-cluster:6379 \
            redis-cluster-4.redis-cluster:6379 \
            redis-cluster-5.redis-cluster:6379 \
            --cluster-replicas 0 \
            --cluster-yes
          
          echo "Redis cluster created successfully!"