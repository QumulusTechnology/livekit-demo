# Domain configuration
domain: livekit-demo.cloudportal.app

image:
  # Registry URL - should be repo.<domain>
  registry: repo.livekit-demo.cloudportal.app
  repository: livekit-demo/trivoh-api
  tag: latest
  pullPolicy: Always

imagePullSecrets:
  - name: harbor-registry

replicaCount: 2

service:
  type: ClusterIP
  port: 3030

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/websocket-services: trivoh-api
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  hosts:
    # Host should be api.<domain>
    - host: api.livekit-demo.cloudportal.app
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: trivoh-api-tls
      hosts:
        - api.livekit-demo.cloudportal.app

# Health check probes
livenessProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 120
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 10

readinessProbe:
  enabled: true
  path: /ready
  initialDelaySeconds: 90
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 10

# Environment variables - cleaned up and organized
env:
  # Application settings
  - name: NODE_ENV
    value: "production"
  - name: PORT
    value: "3030"

  # LiveKit configuration
  - name: LIVEKIT_URL
    # WebSocket URL - should be wss://livekit.<domain>
    value: "wss://livekit.livekit-demo.cloudportal.app"
  - name: LIVEKIT_API_KEY
    valueFrom:
      secretKeyRef:
        name: livekit-keys-file
        key: keys.yaml
  - name: LIVEKIT_API_SECRET
    valueFrom:
      secretKeyRef:
        name: livekit-keys-file
        key: keys.yaml

  # Redis configuration
  - name: REDIS_URL
    value: "redis://redis-redis-cluster.redis.svc.cluster.local:6379"

  # Database configuration - simplified and consistent
  - name: DB_CONNECTION
    value: "mysql"
  - name: DB_DIALECT
    value: "mysql"
  - name: DB_HOST
    value: "mysql"
  - name: DB_PORT
    value: "3306"
  - name: DB_USER
    value: "trivoh_user"
  - name: DB_PASS
    valueFrom:
      secretKeyRef:
        name: mysql-secret
        key: mysql-password
  - name: DB_NAME
    value: "trivoh"

  # Database sync settings - all disabled for production
  - name: DB_SYNC
    value: "false"
  - name: DB_ALTER
    value: "false"
  - name: DB_FORCE
    value: "false"
  - name: SEQUELIZE_SYNC
    value: "false"
  - name: SEQUELIZE_ALTER
    value: "false"
  - name: SEQUELIZE_FORCE
    value: "false"
  - name: DISABLE_SEQUELIZE_SYNC
    value: "true"
  - name: SEQUELIZE_DISABLE_SYNC
    value: "true"

  # Foreign key settings
  - name: DB_FOREIGN_KEY_CHECKS
    value: "0"
  - name: MYSQL_FOREIGN_KEY_CHECKS
    value: "0"
  - name: DISABLE_FK_CONSTRAINTS
    value: "true"
  - name: SEQUELIZE_DISABLE_FK
    value: "true"

  # Performance tuning
  - name: WEB_CONCURRENCY
    value: "2"
  - name: NODE_CLUSTER_WORKERS
    value: "2"
  - name: UV_THREADPOOL_SIZE
    value: "4"
  - name: NODE_OPTIONS
    value: "--max-old-space-size=1536"
  - name: WORKER_PROCESSES
    value: "2"

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - trivoh-api
        topologyKey: kubernetes.io/hostname

# Prometheus monitoring configuration
monitoring:
  enabled: true
  port: 9092
  path: /metrics

# Pod annotations for Prometheus scraping
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9092"
  prometheus.io/path: "/metrics"

# ServiceMonitor for Prometheus Operator
serviceMonitor:
  enabled: true
  namespace: trivoh-api
  interval: 30s
  scrapeTimeout: 10s

# Database initialization
database:
  init:
    enabled: false  # Disabled - using migration job instead
  migration:
    enabled: false  # Disabled temporarily

# MySQL configuration
mysql:
  database: "trivoh"
  username: "trivoh_user"
  # Passwords are generated by External Secrets Operator
# Trigger new revision v2
