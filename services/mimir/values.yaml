metaMonitoring:
  enabled: true
  dashboards:
    enabled: true
  serviceMonitor:
    enabled: true
    clusterLabel: "management-cluster"
  prometheusRule:
    enabled: true
    mimirAlerts: true
    mimirRules: true
    labels:
      cluster: "management-cluster"
  grafanaAgent:
    enabled: true
    installOperator: false
    logs:
      enabled: true
      remote:
        auth:
          username: admin
          passwordSecretName: mimir-credentials
          passwordSecretKey: loki_password
        headers:
          X-Scope-OrgID: master
    metrics:
      remote:
        auth:
          username: admin
          passwordSecretName: mimir-credentials
          passwordSecretKey: mimir_password
        headers:
          X-Scope-OrgID: master
    
# useExternalConfig: true
# configStorageType: Secret
# externalConfigSecretName: mimir-custom-config
# externalConfigVersion: first

nginx:
  replicas: 1
  basicAuth:
    enabled: true
    existingSecret: mimir-secret
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      "cert-manager.io/cluster-issuer": "letsencrypt"
      "ingress.kubernetes.io/ssl-redirect": "true"

#Resources indicated are prepared for minimal usage

distributor:
  replicas: 1
  extraArgs:
    distributor.ingestion-rate-limit: "100000"
    distributor.ingestion-burst-size: "2000000"
ingester:
  replicas: 1
  persistentVolume:
    size: 10Gi
compactor:
  replicas: 1
  persistentVolume:
    size: 10Gi
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
gateway:
  replicas: 1
alertmanager:
  persistentVolume:
    enabled: true
  replicas: 1
  resources:
      requests:
        cpu: 10m
        memory: 32Mi
  statefulSet:
    enabled: true
overrides_exporter:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
querier:
  replicas: 2
  service:
    annotations: {}
    labels: {}
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
query_frontend:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
ruler:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
query_scheduler:
  enabled: true
  replicas: 2
  service:
    annotations: {}
    labels: {}
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
store_gateway:
  persistentVolume:
    size: 10Gi
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
