# Domain configuration
domain: livekit-demo.cloudportal.app

image:
  # Registry URL - should be repo.<domain>
  registry: repo.livekit-demo.cloudportal.app
  repository: livekit-demo/meet-client
  tag: latest
  pullPolicy: Always

imagePullSecrets:
  - name: harbor-registry

replicaCount: 3

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/websocket-services: meet-client
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  hosts:
    # Host should be meet.<domain>
    - host: meet.livekit-demo.cloudportal.app
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: meet-client-tls
      hosts:
        - meet.livekit-demo.cloudportal.app

env:
  - name: LIVEKIT_URL
    # WebSocket URL - should be wss://ws.<domain>
    value: "wss://ws.livekit-demo.cloudportal.app"
  - name: LIVEKIT_API_KEY
    valueFrom:
      secretKeyRef:
        name: livekit-keys-file
        key: keys.yaml
  - name: LIVEKIT_API_SECRET
    valueFrom:
      secretKeyRef:
        name: livekit-keys-file
        key: keys.yaml
  - name: TRIVOH_API_URL
    # API URL - should be https://api.<domain>
    value: "https://api.livekit-demo.cloudportal.app"

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

nodeSelector: {}

tolerations: []

affinity: {}

# Prometheus monitoring configuration
monitoring:
  enabled: true
  port: 9090
  path: /metrics

# Pod annotations for Prometheus scraping
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9090"
  prometheus.io/path: "/metrics"

# ServiceMonitor for Prometheus Operator
serviceMonitor:
  enabled: true
  namespace: meet-client
  interval: 30s
  scrapeTimeout: 10s